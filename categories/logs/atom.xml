<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Logs | ifdattic]]></title>
  <link href="http://ifdattic.com/categories/logs/atom.xml" rel="self"/>
  <link href="http://ifdattic.com/"/>
  <updated>2015-03-19T16:27:58+02:00</updated>
  <id>http://ifdattic.com/</id>
  <author>
    <name><![CDATA[Andrew Marcinkevičius]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Send Symfony Application Logs to MongoDB]]></title>
    <link href="http://ifdattic.com/how-to-send-symfony-application-logs-to-mongodb"/>
    <updated>2014-10-05T15:01:41+03:00</updated>
    <id>http://ifdattic.com/how-to-send-symfony-application-logs-to-mongodb</id>
    <content type="html"><![CDATA[<p>The tutorial assumes that the project is using MongoDB and has everything configured (Doctrine ODM bundle, etc.).</p>

<p>Add the log connection to <code>app/config/config.yml</code>:</p>

<p>```yaml
doctrine_mongodb:</p>

<pre><code>connections:
    log:
        server: "%mongodb_log_server%"
        options:
            password: "%mongodb_log_password%"
            username: "%mongodb_log_username%"
document_managers:
    log:
        auto_mapping: false
        logging: false
</code></pre>

<p>```</p>

<p>A separate connection is needed with <code>logging</code> disabled as otherwise it will lead to a circular reference error (as the connection is using a logger).</p>

<p>In <code>app/config/config_prod.yml</code> add the mongo handler for Monolog and replace <code>fingers_crossed</code> handler with it:</p>

<p>```yaml
monolog:</p>

<pre><code>handlers:
    main:
        type:         fingers_crossed
        action_level: error
        handler:      mongo
    mongo:
        type: mongo
        level: debug
        mongo:
            id: mongolog
            database: "%mongodb_log_database%"
            collection: "%mongodb_log_collection%"
</code></pre>

<p>```</p>

<p>If you want to log to MongoDB on development environment, replace main handler with following code (or add an additional handler):</p>

<p>```yaml
monolog:</p>

<pre><code>handlers:
    main:
        type: mongo
        level: debug
        mongo:
            id: mongolog
            database: "%mongodb_log_database%"
            collection: "logs_%kernel.environment%"
</code></pre>

<p>```</p>

<p>Update the parameters file <code>app/config/parameters.yml.dist</code>:</p>

<p>```yaml
parameters:</p>

<pre><code>mongodb_log_server: "%env.mongodb_log.server%"
mongodb_log_database: "%env.mongodb_log.database%"
mongodb_log_password: "%env.mongodb_log.password%"
mongodb_log_username: "%env.mongodb_log.username%"
mongodb_log_collection: "%env.mongodb_log.collection%"
</code></pre>

<p>```</p>

<p>Create the services used by Monolog handler.</p>

<p>```yaml</p>

<h1>app/config/services.yml</h1>

<p>services:</p>

<pre><code>mongolog:
    class: Mongo
    factory_service: mongolog.connection
    factory_method: getMongo

mongolog.connection:
    class: MongoDoctrine\MongoDB\Connection
    factory_service: doctrine_mongodb.odm.log_document_manager
    factory_method: getConnection
    calls:
        - [initialize, []]
</code></pre>

<p>```</p>

<p>If everything was set correctly the logs should start appearing in MongoDB database.</p>
]]></content>
  </entry>
  
</feed>
